{"compress":true,"commitItems":[["d0985233-1da2-4c84-9745-99a12f240fe6",1556264112945,"### Docker常用命令\n```\n重要:xx表示不同的命令如，pull、run等。可以查看该命令的帮助，所有参数\ndocker xx --help\n\n查看本机的镜像,可通过该方法查看到镜像id等信息.\ndocker images \n\n获取镜像 name：镜像名  [:tag]：版本，默认为最新的（也就是会自己加上一个参数:latest）\ndocker pull [options] name[:tag]\n\n删除镜像,需要删除其下所有容器\ndocker rmi <镜像id>\n\n运行镜像,构建出一个容器. -d表示后台运行. \ndocker run -d image \n-p 8080:80  进行端口映射，将nginx的80端口映射到主机的8080端口上，也就是别人访问8080，可以访问到自己的80\n\n查看目前正在运行的容器\ndocker ps\n\n查看所有容器\ndocker ps -a\n\n停止容器\ndocker stop <容器id>\n\n删除容器\ndocker rm <容器id>\n\n启动一个运行(run)过的容器\ndocker start <容器id>\n\n在运行的容器中执行命令 \ndocker exec [options] container command [arg...]\n例如:   \ndocker exec -it <容器id> bash\n可以进入一个容器，和虚拟机中一样。也就是容器内部\n\n挂载目录:将宿主机的文件共享给容器\ndocker run -d --name=test -v /opt/test:/usr/databases docker-test \ntest是容器的名字，需唯一；\n-v表示创建一个数据卷并挂载到容器里，\n示例表示把宿主机的/opt/test目录挂载到容器的/usr/databases目录下；\ndocker-test是镜像的名字\n\n查看容器当前信息,可在该命令的 Mounts信息中,找到挂载目录信息\ndocker inspect <容器id>\n\n\n\n制作镜像\n以下就是 打包镜像tomcat和jpress.war\n在某个目录创建文件 Dockerfile 编辑输入如下内容：\n    # （继承自哪个镜像）注意,注释不能添加在和命令同行,会报错\n    from images(镜像名)   \n    # (维护人员信息)\n    MAINTAINER ZX 970389745@qq.com  \n    # (同一目录下要打包成镜像的文件,拷贝到tomcat的运行目录下)\n    COPY jpress.war  /usr/local/tomcat/webapps  \n\n此外,有更多命令\nRUN : 执行容器中操作系统的命令(例如是CentOS,可以执行 cp mv 等等.)  \nEXPOSE : 指定该容器暴露的端口,可以通过多个EXPOSE暴露多个端口\nENV : 设置环境变量 例如 ENV JAVA_HOME /var/java\nADD : 将本地文件拷贝到容器中.例如 /var/xxx.tar.gz  /var \nCMD : 容器启动时执行的命令,最多一条. \n其他命令自行搜索.\n\n然后在目录下使用  \n即可创建镜像，注意， . 是当前目录的意思\ndocker build .   \n下面这句 -t是创建镜像并命名， :laster是版本号 ,因为上面的镜像没有命名\ndocker build  . -t jpress:latest\n\n运行容器\n-d表示后台运行 -p表示设置端口映射， jpress是镜像名\ndocker run -d -p  8888:8080 jpress\n\n运行mysql镜像\ndocker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -e MYSQL_DATABASE=xxx  images(镜像名)\n```",[[1556264055003,["david@DESKTOP-HUOM822",[[1,0,"\n"]],[0,0],[1,1]]],[1556264056213,["david@DESKTOP-HUOM822",[[1,0,"---\ntitle: Docker远程连接配置\ncategories: Docker\ntags:\n- docker远程访问\n---"]],[0,0],[65,65]]],[1556264056877,["david@DESKTOP-HUOM822",[[1,66,"\n"]],[65,65],[66,66]]],[1556264060243,["david@DESKTOP-HUOM822",[[-1,71,"Docker常用命令"]],[71,81],[71,71]]],[1556264062145,["david@DESKTOP-HUOM822",[[-1,17,"远程连接配置"],[1,23,"常用命令"]],[11,23],[21,21]]],[1556264067101,["david@DESKTOP-HUOM822",[[-1,49,"docker远程访问"]],[50,59],[49,49]]],[1556264067279,["david@DESKTOP-HUOM822",[[1,49,"c"]],[49,49],[50,50]]],[1556264067765,["david@DESKTOP-HUOM822",[[-1,49,"c"]],[50,50],[49,49]]],[1556264069644,["david@DESKTOP-HUOM822",[[1,49,"基本命令"]],[49,49],[53,53]]],[1556264073333,["david@DESKTOP-HUOM822",[[-1,49,"基本命令"]],[51,53],[49,49]]],[1556264076230,["david@DESKTOP-HUOM822",[[1,49,"docker命令"]],[49,49],[57,57]]],[1556264080158,["david@DESKTOP-HUOM822",[[-1,63,"### "]],[63,67],[63,63]]],[1556264090345,["david@DESKTOP-HUOM822",[[1,1680,"\n"]],[1679,1679],[1680,1680]]],[1556264098158,["david@DESKTOP-HUOM822",[[1,63,"常用命令如下"]],[63,63],[69,69]]],[1556264107062,["david@DESKTOP-HUOM822",[[-1,63,"常用命令如下"]],[69,69],[63,63]]],[1556264112232,["david@DESKTOP-HUOM822",[[1,63,"镜像命令"]],[63,63],[67,67]]],[1556264112782,["david@DESKTOP-HUOM822",[[1,68,"\n"]],[67,67],[68,68]]],[1556264114695,["david@DESKTOP-HUOM822",[[1,69,"容器命令"]],[69,69],[73,73]]],[1556264117001,["david@DESKTOP-HUOM822",[[1,74,"\n"]],[73,73],[74,74]]],[1556264145342,["david@DESKTOP-HUOM822",[[-1,137,"查看本机的镜像,可通过该方法查看到镜像id等信息.\ndocker images \n\n获取镜像 name：镜像名  [:tag]：版本，默认为最新的（也就是会自己加上一个参数:latest）\ndocker pull [options] name[:tag]\n\n删除镜像,需要删除其下所有容器\ndocker rmi <镜像id>\n\n运行镜像,构建出一个容器. -d表示后台运行. \ndocker run -d image \n-p 8080:80  进行端口映射，将nginx的80端口映射到主机的8080端口上，也就是别人访问8080，可以访问到自己的80\n\n查看目前正在运行的容器\ndocker ps\n\n查看所有容器\ndocker ps -a"]],[137,457],[137,137]]],[1556264146916,["david@DESKTOP-HUOM822",[[1,69,"\n"]],[67,67],[68,68]]],[1556264148275,["david@DESKTOP-HUOM822",[[1,68,"```"]],[68,68],[71,71]]],[1556264148826,["david@DESKTOP-HUOM822",[[1,73,"\n"]],[71,71],[72,72]]],[1556264150423,["david@DESKTOP-HUOM822",[[1,72,"```"]],[72,72],[75,75]]],[1556264151585,["david@DESKTOP-HUOM822",[[1,72,"\n"]],[71,71],[72,72]]],[1556264152373,["david@DESKTOP-HUOM822",[[1,72,"查看本机的镜像,可通过该方法查看到镜像id等信息.\ndocker images \n\n获取镜像 name：镜像名  [:tag]：版本，默认为最新的（也就是会自己加上一个参数:latest）\ndocker pull [options] name[:tag]\n\n删除镜像,需要删除其下所有容器\ndocker rmi <镜像id>\n\n运行镜像,构建出一个容器. -d表示后台运行. \ndocker run -d image \n-p 8080:80  进行端口映射，将nginx的80端口映射到主机的8080端口上，也就是别人访问8080，可以访问到自己的80\n\n查看目前正在运行的容器\ndocker ps\n\n查看所有容器\ndocker ps -a"]],[72,72],[392,392]]],[1556264153665,["david@DESKTOP-HUOM822",[[1,68,"\n"]],[67,67],[68,68]]],[1556264166173,["david@DESKTOP-HUOM822",[[-1,468,"\n"]],[467,467],[466,466]]],[1556264167131,["david@DESKTOP-HUOM822",[[-1,467,"\n"]],[466,466],[465,465]]],[1556264232933,[null,[[1,403,"\n\n"],[-1,404,"\n"],[-1,466,"查"],[1,467,"停"]],[403,403],[468,468]]],[1556264232933,[null,[[-1,403,"\n\n"],[1,406,"\n"],[1,467,"查"],[-1,467,"停"]],[468,468],[403,403]]],[1556264192630,["david@DESKTOP-HUOM822",[[-1,920,"制作镜像\n以下就是 打包镜像tomcat和jpress.war\n在某个目录创建文件 Dockerfile 编辑输入如下内容：\n    # （继承自哪个镜像）注意,注释不能添加在和命令同行,会报错\n    from images(镜像名)   \n    # (维护人员信息)\n    MAINTAINER ZX 970389745@qq.com  \n    # (同一目录下要打包成镜像的文件,拷贝到tomcat的运行目录下)\n    COPY jpress.war  /usr/local/tomcat/webapps  \n\n此外,有更多命令\nRUN : 执行容器中操作系统的命令(例如是CentOS,可以执行 cp mv 等等.)  \nEXPOSE : 指定该容器暴露的端口,可以通过多个EXPOSE暴露多个端口\nENV : 设置环境变量 例如 ENV JAVA_HOME /var/java\nADD : 将本地文件拷贝到容器中.例如 /var/xxx.tar.gz  /var \nCMD : 容器启动时执行的命令,最多一条. \n其他命令自行搜索.\n"]],[920,1396],[920,920]]],[1556264193556,["david@DESKTOP-HUOM822",[[-1,920,"\n"]],[920,920],[919,919]]],[1556264194404,["david@DESKTOP-HUOM822",[[-1,919,"\n"]],[919,919],[918,918]]],[1556264205445,["david@DESKTOP-HUOM822",[[-1,918,"\n"]],[918,918],[917,917]]],[1556264207026,["david@DESKTOP-HUOM822",[[1,918,"\n"]],[917,917],[918,918]]],[1556264214272,["david@DESKTOP-HUOM822",[[-1,919,"然后在目录下使用  \n即可创建镜像，注意， . 是当前目录的意思\ndocker build .   \n下面这句 -t是创建镜像并命名， :laster是版本号 ,因为上面的镜像没有命名\ndocker build  . -t jpress:latest\n"]],[919,1045],[919,919]]],[1556264214539,["david@DESKTOP-HUOM822",[[-1,919,"\n"]],[919,919],[918,918]]],[1556264215295,["david@DESKTOP-HUOM822",[[-1,918,"\n"]],[918,918],[917,917]]],[1556264248407,[null,[[1,403,"\n\n"],[-1,404,"\n"],[-1,466,"查"],[1,467,"停"],[-1,917,"\n"],[1,918,"运"]],[403,403],[919,919]]],[1556264248407,[null,[[-1,403,"\n\n"],[1,406,"\n"],[1,467,"查"],[-1,467,"停"],[1,918,"\n"],[-1,918,"运"]],[919,919],[403,403]]],[1556264241232,["david@DESKTOP-HUOM822",[[1,63,"### "]],[63,63],[67,67]]],[1556264245035,["david@DESKTOP-HUOM822",[[1,403,"### "]],[403,403],[407,407]]]],null,"david@DESKTOP-HUOM822"]]}