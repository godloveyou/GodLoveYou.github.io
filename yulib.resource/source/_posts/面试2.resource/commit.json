{"compress":true,"commitItems":[["1b2cc7f6-8c8d-4e6a-84b9-d14faac84e66",1577151580591,"---\ntitle: java面试系列问题(2)\ncategories: java\n\ntags:\n- 面试\n---\n\n一、Java相关\n\nArraylist与LinkedList默认空间是多少；\n\nArraylist与LinkedList区别与各自的优势List 和 Map 区别；\n\n谈谈HashMap，哈希表解决hash冲突的方法；\n\n为什么要重写hashcode()和equals()以及他们之间的区别与关系；\n\nObject的hashcode()是怎么计算的？\n\n若hashcode方法永远返回1或者一个常量会产生什么结果？\n\nJava Collections和Arrays的sort方法默认的排序方法是什么；\n\n引用计数法与GC Root可达性分析法区别；\n\n浅拷贝和深拷贝的区别；\n\nString s=\"abc\"和String s=new String(\"abc\")区别；\n\nHashSet方法里面的hashcode存在哪，如果重写equals不重写hashcode会怎么样？\n\n反射的作用与实现原理；\n\nJava中的回调机制；\n\n模板方法模式；\n\n开闭原则说一下；\n\n发布/订阅使用场景；\n\nKMP算法（一种改进的字符串匹配算法）；\n\nJMM里边的原子性、可见性、有序性是如何体现出来的，JMM中内存屏障是什么意思，\n\n二、多线程\n\nAtomicInteger底层实现原理；\n\nsynchronized与ReentraLock哪个是公平锁；\n\nCAS机制会出现什么问题；\n\n用过并发包下边的哪些类；\n\n一个线程连着调用start两次会出现什么情况？\n\nwait方法能不能被重写，wait能不能被中断；\n\n线程池的实现？四种线程池？重要参数及原理？任务拒接策略有哪几种？\n\n线程状态以及API怎么操作会发生这种转换；\n\n常用的避免死锁方法；\n\n三、JVM\n\nMinor GC与Full GC分别在什么时候发生？什么时候触发Full GC;\n\nGC收集器有哪些？CMS收集器与G1收集器的特点。\n\nJava在什么时候会出现内存泄漏；\n\nJava中的大对象如何进行存储；\n\nrt.jar被什么类加载器加载，什么时间加载；\n\n自己写的类被什么加载，什么时间加载；\n\n自己写的两个不同的类是被同一个类加载器加载的吗？为什么？\n\n为什么新生代内存需要有两个Survivor区？\n\n几种常用的内存调试工具：jmap、jstack、jconsole；\n\n类加载的五个过程：加载、验证、准备、解析、初始化；\n\nG1停顿吗，CMS回收步骤，CMS为什么会停顿，停顿时间；\n\n栈主要存的数据是什么，堆呢？\n\n堆分为哪几块，比如说新生代老生代，那么新生代又分为什么？\n\n软引用和弱引用的使用场景（软引用可以实现缓存，弱引用可以用来在回调函数中防止内存泄露）；\n\n四、数据库\n\n数据库索引，什么是全文索引，全文索引中的倒排索引是什么原理；\n\n数据库最佳左前缀原则是什么？\n\n数据库的三大范式；\n\n悲观锁和乐观锁的原理和应用场景；\n\n左连接、右连接、内连接、外连接、交叉连接、笛卡儿积等；\n\n一般情况下数据库宕机了如何进行恢复（什么是Write Ahead Log机制，什么是Double Write机制，什么是Check Point）；\n\n什么是redo日志、什么是undo日志；\n\n数据库中的隔离性是怎样实现的；原子性、一致性、持久性又是如何实现的；\n\n什么是组合索引，组合索引什么时候会失效；\n\n关系型数据库和非关系型数据库区别；\n\n数据库死锁如何解决；\n\nMySQL并发情况下怎么解决（通过事务、隔离级别、锁）；\n\nMySQL中的MVCC机制是什么意思，根据具体场景，MVCC是否有问题；\n\nMySQL数据库的隔离级别，以及如何解决幻读；\n\n五、缓存服务器\n\nRedis中zSet跳跃表问题；\n\nRedis的set的应用场合？\n\nRedis高级特性了解吗？\n\nRedis的pipeline有什么用处？\n\nRedis集群宕机如何处理，怎么样进行数据的迁移；\n\nRedis的集群方案；\n\nRedis原子操作怎么用比较好；\n\nRedis过期策略是怎么实现的呢？\n\n六、SSM相关\n\nSpring中@Autowired和@Resource注解的区别？\n\nSpring声明一个 bean 如何对其进行个性化定制；\n\nMyBatis有什么优势；\n\nMyBatis如何做事务管理；\n\n七、操作系统\n\nLinux静态链接和动态链接；\n\n什么是IO多路复用模型（select、poll、epoll）；\n\nLinux中的grep管道用处？Linux的常用命令？\n\n操作系统中虚拟地址、逻辑地址、线性地址、物理地址的概念及区别；\n\n内存的页面置换算法；\n\n内存的页面置换算法；\n\n进程调度算法，操作系统是如何调度进程的；\n\n父子进程、孤儿进程、僵死进程等概念；\n\nfork进程时的操作；\n\nkill用法，某个进程杀不掉的原因（僵死进程；进入内核态，忽略kill信号）；\n\n系统管理命令（如查看内存使用、网络情况）；\n\nfind命令、awk使用；\n\nLinux下排查某个死循环的线程；\n\n八、网络相关\n\n数据链路层是做什么的?\n\n数据链路层的流量控制？\n\n网络模型的分层、IP和Mac地址在那个层、TCP和HTTP分别在那个层；\n\nTCP滑动窗口；\n\nTCP为什么可靠；\n\nTCP的同传，拆包与组装包是什么意思；\n\nHttps和Http有什么区别；\n\nHttp 为什么是无状态的；\n\nTCP三次握手，为什么不是三次，为什么不是四次；\n\nTCP的拥塞控制、流量控制详细说明？\n\nHttp1.0和Http2.0的区别；\n\n两个不同ip地址的计算机之间如何通信；\n\n地址解析协议ARP；\n\nOSI七层模型分别对应着五层模型的哪一部分；\n\nTCP三次握手数据丢失了怎么办？那如果后面又找到了呢？\n\n九、分布式相关\n\n消息队列使用的场景介绍和作用（应用耦合、异步消息、流量削锋等）；\n\n如何解决消息队列丢失消息和重复消费问题；\n\nKafka使用过吗，什么是幂等性？怎么保证一致性，持久化怎么做，分区partition的理解，LEO是什么意思，如何保证多个partition之间数据一致性的（ISR机制），为什么Kafka可以这么快（基于磁盘的顺序读写）；\n\n异步队列怎么实现；\n\n你项目的并发是多少？怎么解决高并发问题？单机情况下Tomcat的并发大概是多少，MySQL的并发大致是多少？\n\n什么是C10K问题；\n\n高并发情况下怎么办；\n\n分布式理论，什么是CAP理论，什么是Base理论，什么是Paxos理论；\n\n分布式协议的选举算法；\n\n说一下你对微服务的理解，与SOA的区别；\n\nDubbo的基本原理，RPC，支持哪些通信方式，服务的调用过程；\n\nDubbo如果有一个服务挂掉了怎么办；\n\n分布式事务，操作两个表不在一个库，如何保证一致性。\n\n分布式系统中，每台机器如何产生一个唯一的随机值；\n\n系统的量级、pv、uv等；\n\n什么是Hash一致性算法？分布式缓存的一致性，服务器如何扩容（哈希环）；\n\n正向代理、反向代理；\n\n什么是客户端负载均衡策略、什么是服务器端负载均衡策略；\n\n如何优化Tomcat，常见的优化方式有哪些；\n\nNginx的Master和Worker，Nginx是如何处理请求的；\n\n十、系统设计相关\n\n如何防止表单重复提交（Token令牌环等方式）；\n\n有一个url白名单，需要使用正则表达式进行过滤，但是url量级很大，大概亿级，那么如何优化正则表达式？如何优化亿级的url匹配呢？\n\n常见的Nginx负载均衡策略；已有两台Nginx服务器了，倘若这时候再增加一台服务器，采用什么负载均衡算法比较好？\n\n扫描二维码登录的过程解析；\n\n如何设计一个生成唯一UUID的算法？\n\n实现一个负载均衡的算法，服务器资源分配为70%、20%、10%；\n\n有三个线程T1 T2 T3，如何保证他们按顺序执行；\n\n三个线程循环输出ABCABCABC....\n\n十一、安全相关\n\n什么是XSS攻击，XSS攻击的一般表现形式有哪些？如何防止XSS攻击；",[[1577151573656,["david@DESKTOP-9844NL4",[[-1,42,"\n"]],[42,42],[41,41]]],[1577151576968,["david@DESKTOP-9844NL4",[[-1,48,"- "]],[50,50],[48,48]]],[1577151577197,["david@DESKTOP-9844NL4",[[-1,47,"\n"]],[48,48],[47,47]]]],null,"david@DESKTOP-9844NL4"],["f60055c8-d0bb-4197-8466-6bc1add3d877",1577153412464,"---\ntitle: java面试系列问题(2)\ncategories: java\ntags:面试\n---\n\n一、Java相关\n\nArraylist与LinkedList默认空间是多少；\n\nArraylist与LinkedList区别与各自的优势List 和 Map 区别；\n\n谈谈HashMap，哈希表解决hash冲突的方法；\n\n为什么要重写hashcode()和equals()以及他们之间的区别与关系；\n\nObject的hashcode()是怎么计算的？\n\n若hashcode方法永远返回1或者一个常量会产生什么结果？\n\nJava Collections和Arrays的sort方法默认的排序方法是什么；\n\n引用计数法与GC Root可达性分析法区别；\n\n浅拷贝和深拷贝的区别；\n\nString s=\"abc\"和String s=new String(\"abc\")区别；\n\nHashSet方法里面的hashcode存在哪，如果重写equals不重写hashcode会怎么样？\n\n反射的作用与实现原理；\n\nJava中的回调机制；\n\n模板方法模式；\n\n开闭原则说一下；\n\n发布/订阅使用场景；\n\nKMP算法（一种改进的字符串匹配算法）；\n\nJMM里边的原子性、可见性、有序性是如何体现出来的，JMM中内存屏障是什么意思，\n\n二、多线程\n\nAtomicInteger底层实现原理；\n\nsynchronized与ReentraLock哪个是公平锁；\n\nCAS机制会出现什么问题；\n\n用过并发包下边的哪些类；\n\n一个线程连着调用start两次会出现什么情况？\n\nwait方法能不能被重写，wait能不能被中断；\n\n线程池的实现？四种线程池？重要参数及原理？任务拒接策略有哪几种？\n\n线程状态以及API怎么操作会发生这种转换；\n\n常用的避免死锁方法；\n\n三、JVM\n\nMinor GC与Full GC分别在什么时候发生？什么时候触发Full GC;\n\nGC收集器有哪些？CMS收集器与G1收集器的特点。\n\nJava在什么时候会出现内存泄漏；\n\nJava中的大对象如何进行存储；\n\nrt.jar被什么类加载器加载，什么时间加载；\n\n自己写的类被什么加载，什么时间加载；\n\n自己写的两个不同的类是被同一个类加载器加载的吗？为什么？\n\n为什么新生代内存需要有两个Survivor区？\n\n几种常用的内存调试工具：jmap、jstack、jconsole；\n\n类加载的五个过程：加载、验证、准备、解析、初始化；\n\nG1停顿吗，CMS回收步骤，CMS为什么会停顿，停顿时间；\n\n栈主要存的数据是什么，堆呢？\n\n堆分为哪几块，比如说新生代老生代，那么新生代又分为什么？\n\n软引用和弱引用的使用场景（软引用可以实现缓存，弱引用可以用来在回调函数中防止内存泄露）；\n\n四、数据库\n\n数据库索引，什么是全文索引，全文索引中的倒排索引是什么原理；\n\n数据库最佳左前缀原则是什么？\n\n数据库的三大范式；\n\n悲观锁和乐观锁的原理和应用场景；\n\n左连接、右连接、内连接、外连接、交叉连接、笛卡儿积等；\n\n一般情况下数据库宕机了如何进行恢复（什么是Write Ahead Log机制，什么是Double Write机制，什么是Check Point）；\n\n什么是redo日志、什么是undo日志；\n\n数据库中的隔离性是怎样实现的；原子性、一致性、持久性又是如何实现的；\n\n什么是组合索引，组合索引什么时候会失效；\n\n关系型数据库和非关系型数据库区别；\n\n数据库死锁如何解决；\n\nMySQL并发情况下怎么解决（通过事务、隔离级别、锁）；\n\nMySQL中的MVCC机制是什么意思，根据具体场景，MVCC是否有问题；\n\nMySQL数据库的隔离级别，以及如何解决幻读；\n\n五、缓存服务器\n\nRedis中zSet跳跃表问题；\n\nRedis的set的应用场合？\n\nRedis高级特性了解吗？\n\nRedis的pipeline有什么用处？\n\nRedis集群宕机如何处理，怎么样进行数据的迁移；\n\nRedis的集群方案；\n\nRedis原子操作怎么用比较好；\n\nRedis过期策略是怎么实现的呢？\n\n六、SSM相关\n\nSpring中@Autowired和@Resource注解的区别？\n\nSpring声明一个 bean 如何对其进行个性化定制；\n\nMyBatis有什么优势；\n\nMyBatis如何做事务管理；\n\n七、操作系统\n\nLinux静态链接和动态链接；\n\n什么是IO多路复用模型（select、poll、epoll）；\n\nLinux中的grep管道用处？Linux的常用命令？\n\n操作系统中虚拟地址、逻辑地址、线性地址、物理地址的概念及区别；\n\n内存的页面置换算法；\n\n内存的页面置换算法；\n\n进程调度算法，操作系统是如何调度进程的；\n\n父子进程、孤儿进程、僵死进程等概念；\n\nfork进程时的操作；\n\nkill用法，某个进程杀不掉的原因（僵死进程；进入内核态，忽略kill信号）；\n\n系统管理命令（如查看内存使用、网络情况）；\n\nfind命令、awk使用；\n\nLinux下排查某个死循环的线程；\n\n八、网络相关\n\n数据链路层是做什么的?\n\n数据链路层的流量控制？\n\n网络模型的分层、IP和Mac地址在那个层、TCP和HTTP分别在那个层；\n\nTCP滑动窗口；\n\nTCP为什么可靠；\n\nTCP的同传，拆包与组装包是什么意思；\n\nHttps和Http有什么区别；\n\nHttp 为什么是无状态的；\n\nTCP三次握手，为什么不是三次，为什么不是四次；\n\nTCP的拥塞控制、流量控制详细说明？\n\nHttp1.0和Http2.0的区别；\n\n两个不同ip地址的计算机之间如何通信；\n\n地址解析协议ARP；\n\nOSI七层模型分别对应着五层模型的哪一部分；\n\nTCP三次握手数据丢失了怎么办？那如果后面又找到了呢？\n\n九、分布式相关\n\n消息队列使用的场景介绍和作用（应用耦合、异步消息、流量削锋等）；\n\n如何解决消息队列丢失消息和重复消费问题；\n\nKafka使用过吗，什么是幂等性？怎么保证一致性，持久化怎么做，分区partition的理解，LEO是什么意思，如何保证多个partition之间数据一致性的（ISR机制），为什么Kafka可以这么快（基于磁盘的顺序读写）；\n\n异步队列怎么实现；\n\n你项目的并发是多少？怎么解决高并发问题？单机情况下Tomcat的并发大概是多少，MySQL的并发大致是多少？\n\n什么是C10K问题；\n\n高并发情况下怎么办；\n\n分布式理论，什么是CAP理论，什么是Base理论，什么是Paxos理论；\n\n分布式协议的选举算法；\n\n说一下你对微服务的理解，与SOA的区别；\n\nDubbo的基本原理，RPC，支持哪些通信方式，服务的调用过程；\n\nDubbo如果有一个服务挂掉了怎么办；\n\n分布式事务，操作两个表不在一个库，如何保证一致性。\n\n分布式系统中，每台机器如何产生一个唯一的随机值；\n\n系统的量级、pv、uv等；\n\n什么是Hash一致性算法？分布式缓存的一致性，服务器如何扩容（哈希环）；\n\n正向代理、反向代理；\n\n什么是客户端负载均衡策略、什么是服务器端负载均衡策略；\n\n如何优化Tomcat，常见的优化方式有哪些；\n\nNginx的Master和Worker，Nginx是如何处理请求的；\n\n十、系统设计相关\n\n如何防止表单重复提交（Token令牌环等方式）；\n\n有一个url白名单，需要使用正则表达式进行过滤，但是url量级很大，大概亿级，那么如何优化正则表达式？如何优化亿级的url匹配呢？\n\n常见的Nginx负载均衡策略；已有两台Nginx服务器了，倘若这时候再增加一台服务器，采用什么负载均衡算法比较好？\n\n扫描二维码登录的过程解析；\n\n如何设计一个生成唯一UUID的算法？\n\n实现一个负载均衡的算法，服务器资源分配为70%、20%、10%；\n\n有三个线程T1 T2 T3，如何保证他们按顺序执行；\n\n三个线程循环输出ABCABCABC....\n\n十一、安全相关\n\n什么是XSS攻击，XSS攻击的一般表现形式有哪些？如何防止XSS攻击；",[[1577153400437,["david@DESKTOP-9844NL4",[[1,47," "]],[47,47],[48,48]]]],null,"david@DESKTOP-9844NL4"]]}